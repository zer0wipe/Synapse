const esbuild = require('esbuild');
const process = require('process');

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const isWatch = process.argv.includes('--watch');

async function build() {
  try {
    const buildOptions = {
      entryPoints: ['main.ts'],
      bundle: true,
      external: ['obsidian', 'tslib'],
      format: 'cjs',
      target: 'es2018',
      outfile: 'main.js',
      logLevel: 'info',
      sourcemap: 'inline',
      treeShaking: true,
      minify: !isWatch,
      banner: {
        js: banner,
      },
    };

    if (isWatch) {
      buildOptions.watch = {
        onRebuild(error, result) {
          if (error) console.error('watch build failed:', error);
          else console.log('watch build succeeded:', result);
        },
      };
    }

    await esbuild.build(buildOptions);
    console.log('Build complete.');
  } catch (error) {
    console.error('Build failed:', error);
    process.exit(1);
  }
}

build();
